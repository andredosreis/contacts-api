const fs = require('fs');
const path = require('path');

console.log("üîç Iniciando verifica√ß√£o do projeto...\n");

// 1Ô∏è‚É£ Verificar se .env est√° no .gitignore
const gitignorePath = path.join(__dirname, '.gitignore');
if (fs.existsSync(gitignorePath)) {
    const gitignoreContent = fs.readFileSync(gitignorePath, 'utf8');
    if (!gitignoreContent.includes('.env')) {
        console.log("‚ö†Ô∏è ALERTA: O arquivo `.env` N√ÉO est√° no `.gitignore`! Adicione para proteger suas credenciais.");
    } else {
        console.log("‚úÖ O arquivo `.env` est√° protegido no `.gitignore`.");
    }
} else {
    console.log("‚ö†Ô∏è ALERTA: O arquivo `.gitignore` n√£o foi encontrado! Voc√™ precisa criar um para proteger `.env` e `node_modules/`.");
}

// 2Ô∏è‚É£ Verificar se node_modules/ est√° no .gitignore
if (fs.existsSync(gitignorePath)) {
    if (!gitignoreContent.includes('node_modules')) {
        console.log("‚ö†Ô∏è ALERTA: A pasta `node_modules/` N√ÉO est√° no `.gitignore`! Adicione para evitar problemas no GitHub.");
    } else {
        console.log("‚úÖ A pasta `node_modules/` est√° protegida no `.gitignore`.");
    }
}

// 3Ô∏è‚É£ Verificar estrutura MVC
const requiredFiles = [
    'server.js',
    'routes/contacts.js',
    'models/Contact.js'
];

requiredFiles.forEach(file => {
    const filePath = path.join(__dirname, file);
    if (fs.existsSync(filePath)) {
        console.log(`‚úÖ Arquivo encontrado: ${file}`);
    } else {
        console.log(`‚ùå ERRO: Arquivo n√£o encontrado: ${file} (Verifique se est√° no local correto)`);
    }
});

console.log("\n‚úÖ Verifica√ß√£o conclu√≠da! Se houver avisos ‚ö†Ô∏è, corrija antes de enviar seu projeto.\n");
